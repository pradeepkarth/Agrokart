# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at https://dart.dev/lints.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # avoid_print: false  # Uncomment to disable the `avoid_print` rule
    # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule
    always_declare_return_types: true
    avoid_multiple_declarations_per_line: true
    avoid_print: true
    camel_case_types: true
    constant_identifier_names: true
    directives_ordering: true
    file_names: true
    library_names: true
    library_prefixes: true
    no_duplicate_case_values: true
    prefer_const_constructors: true
    prefer_const_declarations: true
    prefer_final_fields: true
    prefer_final_locals: true
    prefer_single_quotes: true
    prefer_typing_uninitialized_variables: true
    public_member_api_docs: true
    sort_constructors_first: true
    type_annotate_public_apis: true
    unnecessary_lambdas: true
    unnecessary_null_in_if_null_operators: true
    use_key_in_widget_constructors: true
    use_rethrow_when_possible: true
    avoid_classes_with_only_static_members: true
    prefer_final_in_for_each: true
    prefer_const_literals_to_create_immutables: true
    prefer_relative_imports: true
    prefer_asserts_in_initializer_lists: true
    prefer_expression_function_bodies: true
    prefer_interpolation_to_compose_strings: true
    prefer_spread_collections: true
    unnecessary_await_in_return: true
    unnecessary_parenthesis: true
    unnecessary_statements: true
    use_enums: true
    use_function_type_syntax_for_parameters: true
    use_late_for_private_fields_and_variables: true
    use_named_constants: true
    use_setters_to_change_properties: true
    use_string_buffers: true
    use_super_parameters: true
    use_to_and_as_if_applicable: true
    valid_regexps: true
    # Add more as needed for your team's standards

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
